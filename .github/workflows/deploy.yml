name: Deploy to CapRover

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      app:
        description: "Select app to deploy (frontend, backend-go, backend-python, all)"
        required: false
        default: ""

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend_go: ${{ steps.filter.outputs.backend_go }}
      backend_python: ${{ steps.filter.outputs.backend_python }}
      deploy_all: ${{ steps.check_message.outputs.deploy_all }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check Changed Paths
        id: filter
        run: |
          git fetch origin main || true
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD 2>/dev/null || git ls-files)

          echo "frontend=$(echo "$CHANGED_FILES" | grep -q '^frontend/' && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "backend_go=$(echo "$CHANGED_FILES" | grep -q '^backend-go/' && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "backend_python=$(echo "$CHANGED_FILES" | grep -q '^backend-python/' && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Check Commit Message for Deploy All
        id: check_message
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[deploy-all]"* ]]; then
            echo "deploy_all=true" >> $GITHUB_OUTPUT
          else
            echo "deploy_all=false" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend-go, backend-python]
    if: |
      github.event_name == 'workflow_dispatch' ||
      needs.detect-changes.outputs.deploy_all == 'true' ||
      (matrix.app == 'frontend' && needs.detect-changes.outputs.frontend == 'true') ||
      (matrix.app == 'backend-go' && needs.detect-changes.outputs.backend_go == 'true') ||
      (matrix.app == 'backend-python' && needs.detect-changes.outputs.backend_python == 'true')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install CapRover CLI
        run: npm install -g caprover

      - name: Deploy to CapRover
        env:
          CAPROVER_URL: ${{ secrets.CAPROVER_URL }}
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.app }}" != "" ]]; then
            APP=${{ github.event.inputs.app }}
          else
            APP=${{ matrix.app }}
          fi

          case $APP in
            frontend)
              caprover deploy \
                --caproverUrl $CAPROVER_URL \
                --caproverPassword $CAPROVER_PASSWORD \
                --appName ${{ secrets.CAPROVER_FRONTEND_APP }} \
                --branch main
              ;;
            backend-go)
              caprover deploy \
                --caproverUrl $CAPROVER_URL \
                --caproverPassword $CAPROVER_PASSWORD \
                --appName ${{ secrets.CAPROVER_BACKEND_GO_APP }} \
                --branch main
              ;;
            backend-python)
              caprover deploy \
                --caproverUrl $CAPROVER_URL \
                --caproverPassword $CAPROVER_PASSWORD \
                --appName ${{ secrets.CAPROVER_BACKEND_PYTHON_APP }} \
                --branch main
              ;;
          esac
